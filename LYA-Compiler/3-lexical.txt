int RESERVED 1 1
gcd IDF 1 5
( SOP 1 9
int RESERVED 1 10
u ID 1 14
, SOP 1 15
int RESERVED 1 17
v ID 1 21
) SOP 1 22
{ SOP 2 1
int RESERVED 2 2
a ID 2 6
[ SOP 2 7
4 NUM 2 8
] SOP 2 9
; EOP 2 10
a ID 3 1
[ SOP 3 2
4 NUM 3 3
] SOP 3 4
= AOP 3 6
1 NUM 3 8
; EOP 3 9
if RESERVED 4 1
( SOP 4 4
v ID 4 5
== COP 4 7
0 NUM 4 10
) SOP 4 11
return RESERVED 4 13
u ID 4 20
; EOP 4 22
else RESERVED 5 1
return RESERVED 5 6
gcd IDF 5 13
( SOP 5 16
v ID 5 17
, SOP 5 18
u ID 5 19
/ OOP 5 20
u ID 5 21
+ OOP 5 23
v ID 5 25
* OOP 5 26
v ID 5 27
/ OOP 5 28
u ID 5 29
) SOP 5 30
; EOP 5 31
} SOP 6 1
void RESERVED 7 1
main IDF 7 6
( SOP 7 10
void RESERVED 7 11
) SOP 7 15
{ SOP 8 1
int RESERVED 8 3
x ID 8 7
; EOP 8 8
int RESERVED 8 10
y ID 8 14
; EOP 8 15
x ID1 9 1
= AOP 9 3
input IDF 9 5
( SOP 9 10
) SOP 9 11
; EOP 9 12
y ID1 9 14
= AOP 9 16
input IDF 9 18
( SOP 9 23
) SOP 9 24
; EOP 9 25
output IDF 10 1
( SOP 10 8
gcd IDF 10 10
( SOP 10 14
x ID 10 16
, SOP 10 18
y ID 10 20
) SOP 10 22
) SOP 10 24
; EOP 10 26
x ID1 11 1
= AOP 11 2
1 NUM 11 3
+ OOP 11 4
1 NUM 11 5
; EOP 11 6
} SOP 12 1
# # 13 1

int RESERVED 1 1
gcd ID 1 5
( SOP 1 8
int RESERVED 1 9
u ID 1 13
, SOP 1 14
int RESERVED 1 16
v ID 1 20
) SOP 1 21
{ SOP 1 23
int RESERVED 1 28
k ID 1 32
; EOP 1 33
k ID 1 38
= AOP 1 40
u ID 1 42
/ OOP 1 43
u ID 1 44
+ OOP 1 45
v ID 1 46
* OOP 1 47
v ID 1 48
/ OOP 1 49
u ID 1 50
; EOP 1 51
if RESERVED 1 56
( SOP 1 58
k ID 1 59
> COP 1 61
8 NUM 1 63
) SOP 1 64
{ SOP 1 66
return RESERVED 1 71
u ID 1 78
; EOP 1 79
} SOP 1 84
else RESERVED 1 89
{ SOP 1 94
return RESERVED 1 99
v ID 1 106
; EOP 1 107
} SOP 1 112
} SOP 2 0
void RESERVED 3 0
main ID 3 5
( SOP 3 9
void RESERVED 3 10
) SOP 3 14
{ SOP 4 0
int RESERVED 4 5
x ID 4 9
; EOP 4 10
int RESERVED 4 12
y ID 4 16
; EOP 4 17
int RESERVED 4 19
z ID 4 23
; EOP 4 24
x ID 4 29
= AOP 4 31
input ID 4 33
( SOP 4 38
) SOP 4 39
; EOP 4 40
y ID 4 45
= AOP 4 47
input ID 4 49
( SOP 4 54
) SOP 4 55
; EOP 4 56
z ID 4 61
= AOP 4 63
input ID 4 65
( SOP 4 70
) SOP 4 71
; EOP 4 72
while RESERVED 4 77
( SOP 4 82
x ID 4 83
< COP 4 85
10 NUM 4 87
) SOP 4 89
{ SOP 4 91
x ID 4 96
= AOP 4 98
x ID 4 100
+ OOP 4 102
1 NUM 4 104
; EOP 4 105
while RESERVED 4 110
( SOP 4 115
y ID 4 116
>= COP 4 118
10 NUM 4 121
) SOP 4 123
{ SOP 4 125
y ID 4 130
= AOP 4 132
y ID 4 134
- OOP 4 136
1 NUM 4 138
; EOP 4 139
} SOP 4 144
if RESERVED 4 149
( SOP 4 151
z ID 4 152
!= COP 4 154
x ID 4 157
+ OOP 4 159
y ID 4 161
) SOP 4 162
{ SOP 4 164
z ID 4 169
= AOP 4 171
x ID 4 173
+ OOP 4 175
y ID 4 177
; EOP 4 178
} SOP 4 183
} SOP 4 188
return RESERVED 4 193
z ID 4 200
; EOP 4 201
} SOP 5 0
